{"version":3,"sources":["assets/Resume.pdf","components/header/Header.tsx","components/heading/Heading.tsx","components/markdown/CodeBlock.tsx","components/markdown/Markdown.tsx","assets/profile.png","components/about/About.tsx","context/ThemeContext.tsx","components/footer/Footer.tsx","components/chip/Chip.tsx","components/project/Project.tsx","hooks/useMarkdown.ts","components/project/ProjectList.tsx","components/project/ProjectDetails.ts","components/resume/Resume.tsx","components/app/App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","className","to","href","ResumeFile","download","target","rel","Heading","props","heading","CodeBlock","language","style","atomDark","value","Markdown","source","escapeHtml","renderers","code","disallowedTypes","About","src","ProfilePic","alt","themes","THEMES","DARK_BLUE","DARK_GREEN","currentThemeIdx","applyTheme","theme","Object","entries","key","document","documentElement","setProperty","pickNextTheme","length","Footer","onClick","Chip","Project","readme","url","useState","markdown","setMarkdown","useEffect","fetch","then","response","text","md","useMarkdownUrl","title","repositoryLink","webLink","playstoreLink","subtitle","techStack","role","map","duration","details","ProjectList","projects","project","experience","EmbedStyle","position","height","top","left","zIndex","Resume","width","type","App","basename","process","exact","path","render","experiences","component","Boolean","window","location","hostname","match","Date","getHours","keys","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"mUAAe,MAA0B,mC,eCM1B,SAASA,IACtB,OACE,sBAAKC,UAAW,mBAAhB,UACE,sBAAKA,UAAW,aAAhB,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,YAAT,sBACA,cAAC,IAAD,CAAMA,GAAG,cAAT,wBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,uBAEF,sBAAKD,UAAW,aAAhB,UACE,mBAAGE,KAAMC,EAAYC,SAAS,0BAA9B,SACE,mBAAGJ,UAAW,4BAEhB,mBAAGE,KAAK,wCAAwCG,OAAO,SAASC,IAAI,sBAApE,SACE,mBAAGN,UAAW,4BAEhB,mBAAGE,KAAK,+BAA+BG,OAAO,SAASC,IAAI,sBAA3D,SACE,mBAAGN,UAAW,0BAEhB,mBAAGE,KAAK,8BAA8BG,OAAO,SAASC,IAAI,sBAA1D,SACE,mBAAGN,UAAW,kC,OClBT,SAASO,EAAQC,GAC9B,OAAO,6BAAKA,EAAMC,U,uCCAL,SAASC,EAAUF,GAChC,OACE,cAAC,IAAD,CAAmBG,SAAUH,EAAMG,SAAUC,MAAOC,IAApD,SACGL,EAAMM,QCHE,SAASC,EAASP,GAC/B,OACE,cAAC,IAAD,CACEQ,OAAQR,EAAMQ,OACdC,YAAY,EACZC,UAAW,CAAEC,KAAMT,GACnBU,gBAAiB,KCfR,UAA0B,oC,OC2B1B,SAASC,IACtB,OACE,sBAAKrB,UAAW,kBAAhB,UACE,cAAC,EAAD,CAASS,QAAS,aAClB,qBAAKT,UAAW,kBAAhB,SACE,qBAAKsB,IAAKC,EAAYC,IAAK,kBAE7B,cAACT,EAAD,CAAUC,OA1BG,i+B,mBCCbS,EAAS,CACb,CAEE,iBAAkB,UAClB,kBAAmB,UACnB,uBAAwB,UACxB,eAAgB,WAElB,CAEE,iBAAkB,UAClB,kBAAmB,UACnB,uBAAwB,UACxB,eAAgB,YAWPC,EAAS,CACpBC,UAAW,EACXC,WAAY,GAIVC,EAAkBH,EAAOE,WAEtB,SAASE,EAAWC,GACzBF,EAAkBE,EAClB,cAAyBC,OAAOC,QAAQR,EAAOM,IAA/C,eAAwD,CAAnD,0BAAKG,EAAL,KAAUpB,EAAV,KACHqB,SAASC,gBAAgBxB,MAAMyB,YAAYH,EAAKpB,IAI7C,SAASwB,IAEdR,EADAD,GAAmBA,EAAkB,GAAKJ,EAAOc,QC7CpC,SAASC,IACtB,OACE,qBAAKxC,UAAW,mBAAhB,SACE,qBAAKA,UAAW,kBAAmByC,QAASH,EAA5C,+B,mBCCS,SAASI,EAAKlC,GAC3B,OAAO,qBAAKR,UAAW,OAAhB,SAAyBQ,EAAMM,Q,OCUzB,SAAS6B,EAAQnC,GAC9B,IAAMoC,EClBO,SAAwBC,GACrC,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAUA,OARAC,qBAAU,WACJJ,GACFK,MAAML,GACHM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAQN,EAAYM,QAE7B,CAACT,IAEGE,EDOQQ,CAAe/C,EAAMoC,QAEpC,OACE,sBACE5C,UAAW,oBADb,UAME,sBAAKA,UAAW,iBAAhB,UACE,qBAAKA,UAAW,gBAAhB,SAAkCQ,EAAMgD,QACvChD,EAAMiD,gBACL,mBAAGvD,KAAMM,EAAMiD,eAAgBpD,OAAO,SAASC,IAAI,sBAAnD,SACE,mBAAGN,UAAW,0BAGjBQ,EAAMkD,SACL,mBAAGxD,KAAMM,EAAMkD,QAASrD,OAAO,SAASC,IAAI,sBAA5C,SACE,mBAAGN,UAAW,yBAGjBQ,EAAMmD,eACL,mBAAGzD,KAAMM,EAAMmD,cAAetD,OAAO,SAASC,IAAI,sBAAlD,SACE,mBAAGN,UAAW,kCAInBQ,EAAMoD,UAAY,qBAAK5D,UAAW,mBAAhB,SAAqCQ,EAAMoD,WAC7DpD,EAAMqD,WACL,sBAAK7D,UAAW,oBAAhB,UACE,sBAAM8D,KAAK,MAAM,aAAY,WAA7B,0BAEQ,IACPtD,EAAMqD,UAAUE,KAAI,SAACjD,GACpB,OAAO,cAAC,EAAD,CAAkBA,MAAOA,GAAdA,SAIvBN,EAAMwD,UACL,sBAAKhE,UAAW,mBAAhB,UACE,sBAAM8D,KAAK,MAAM,aAAY,WAA7B,0BAEQ,IACPtD,EAAMwD,YAGX,cAACjD,EAAD,CAAUC,OAAQ4B,GAAkBpC,EAAMyD,aExDjC,SAASC,EAAY1D,GAClC,OACE,gCACE,cAAC,EAAD,CAASC,QAASD,EAAMC,UACvBD,EAAM2D,SAASJ,KAAI,SAACK,GACnB,OAAO,cAAC,EAAD,eAAiCA,GAAnBA,EAAQZ,aCb9B,IAAMa,EAAa,CACxB,CACEb,MAAO,6BACPI,SAAU,0DACVC,UAAW,CAAC,SAAU,UAAW,YACjCG,SAAU,0BACVC,QAAQ,miBASV,CACET,MAAO,SACPI,SAAU,yEACVC,UAAW,CAAC,SAAU,OAAQ,aAAc,SAAU,oBACtDG,SAAU,uBACVC,QAAQ,yUAOV,CACET,MAAO,wCACPI,SAAU,kCACVC,UAAW,CAAC,SAAU,OAAQ,aAAc,WAAY,aAAc,kBAAmB,WACzFG,SAAU,uBACVC,QAAQ,ilCAkBV,CACET,MAAO,oCACPI,SAAU,4BACVC,UAAW,CAAC,SAAU,aAAc,QAAS,SAC7CG,SAAU,2BACVC,QAAQ,kvBAeV,CACET,MAAO,sBACPI,SAAU,wBACVC,UAAW,CAAC,OAAQ,WAAY,kBAAmB,SAAU,OAC7DG,SAAU,gBACVC,QAAQ,kbASV,CACET,MAAO,cACPI,SAAU,kCACVI,SAAU,sBACVC,QAAQ,gdAORR,eAAgB,2BAChBC,QAAS,4BAIAS,EAAW,CACtB,CACEX,MAAO,eACPI,SAAU,6BACVC,UAAW,CAAC,aAAc,OAAQ,mBAClCI,QAAQ,kRAKRR,eAAgB,4CAChBC,QAAS,8DACTd,OAAQ,6EAEV,CACEY,MAAO,YACPI,SAAU,2BACVC,UAAW,CAAC,aAAc,SAAU,eAAgB,QAAS,UAC7DG,SAAU,wBACVC,QAAQ,waASRP,QAAS,qCAEX,CACEF,MAAO,YACPI,SAAU,2BACVC,UAAW,CAAC,aAAc,UAAW,WACrCG,SAAU,+BACVC,QAAQ,oPAKRP,QAAS,kCAEX,CACEF,MAAO,eACPI,SAAU,wCACVC,UAAW,CAAC,SAAU,SAAU,cAChCG,SAAU,gCACVC,QAAQ,6XAQRP,QAAS,wCAEX,CACEF,MAAO,YACPI,SAAU,mDACVC,UAAW,CAAC,SAAU,MACtBI,QAAQ,mOAKRR,eAAgB,yCAChBb,OAAQ,0EAEV,CACEY,MAAO,YACPI,SAAU,uEACVC,UAAW,CAAC,MAAO,QACnBI,QAAQ,+KAIRR,eAAgB,yCAChBb,OAAQ,0EAEV,CACEY,MAAO,cACPI,SAAU,2BACVC,UAAW,CAAC,OAAQ,WAAY,kBAAmB,SAAU,UAAW,UACxEG,SAAU,6BACVC,QAAQ,mbASRN,cAAe,mEAEjB,CACEH,MAAO,WACPI,SAAU,6BACVI,SAAU,CAAC,gBACXH,UAAW,CAAC,SAAU,OAAQ,OAAQ,SAAU,YAChDI,QAAQ,u1BAaRR,eAAgB,iDAElB,CACED,MAAO,cACPI,SAAU,WACVI,SAAU,CAAC,gBACXH,UAAW,CAAC,SAAU,OAAQ,aAAc,oBAAqB,UAAW,OAC5EI,QAAQ,wYAQRR,eAAgB,4CCpOda,EAAa,CACjBC,SAAU,WACVC,OAAQ,OACRC,IAAK,EACLC,KAAM,EACNC,OAAQ,KAGK,SAASC,IACtB,OAAO,uBAAOhE,MAAO0D,EAAYO,MAAM,OAAOL,OAAO,OAAOlD,IAAKnB,EAAY2E,KAAK,oB,cCCrE,SAASC,IACtB,OACE,cAAC,IAAD,CAAYC,SAAUC,GAAtB,SACE,sBAAKjF,UAAW,gBAAhB,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEkF,OAAO,EACPC,KAAM,YACNC,OAAQ,kBAAM,cAAClB,EAAD,CAAazD,QAAS,WAAY0D,SAAUA,OAE5D,cAAC,IAAD,CACEe,OAAO,EACPC,KAAM,cACNC,OAAQ,kBAAM,cAAClB,EAAD,CAAazD,QAAS,aAAc0D,SAAUkB,OAE9D,cAAC,IAAD,CAAOH,OAAO,EAAMC,KAAM,UAAWG,UAAWV,IAChD,cAAC,IAAD,CAAOM,OAAO,EAAMC,KAAM,IAAKG,UAAWjE,OAE5C,cAAC,EAAD,SCpBYkE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCTnC7D,GADc,IAAI8D,MAAOC,WAAa7D,OAAO8D,KAAKpE,GAAQa,QAG1DwD,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEF7D,SAAS8D,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjD,MAAK,SAACkD,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.1f129176.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Resume.70c9b353.pdf\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ResumeFile from \"../../assets/Resume.pdf\";\n\nimport \"./Header.css\";\n\nexport default function Header() {\n  return (\n    <div className={\"header-container\"}>\n      <div className={\"menu-links\"}>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/projects\">Projects</Link>\n        <Link to=\"/experience\">Experience</Link>\n        <Link to=\"/resume\">Resume</Link>\n      </div>\n      <div className={\"icon-links\"}>\n        <a href={ResumeFile} download=\"Aditya Kumar Resume.pdf\">\n          <i className={\"fas fa-file-pdf fa-lg\"}></i>\n        </a>\n        <a href=\"https://www.linkedin.com/in/adityaa30\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className={\"fab fa-linkedin fa-lg\"}></i>\n        </a>\n        <a href=\"https://github.com/adityaa30\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className={\"fab fa-github fa-lg\"}></i>\n        </a>\n        <a href=\"mailto:k.aditya00@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <i className={\"fas fa-envelope fa-lg\"}></i>\n        </a>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./Heading.css\";\n\ninterface HeadingProps {\n  heading: string;\n}\n\nexport default function Heading(props: HeadingProps) {\n  return <h1>{props.heading}</h1>;\n}\n","import React from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { atomDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\ninterface CodeBlockProps {\n  value: string;\n  language: string;\n}\n\nexport default function CodeBlock(props: CodeBlockProps) {\n  return (\n    <SyntaxHighlighter language={props.language} style={atomDark}>\n      {props.value}\n    </SyntaxHighlighter>\n  );\n}\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport CodeBlock from \"./CodeBlock\";\n\ninterface MarkdownProps {\n  source: string;\n}\n\nexport default function Markdown(props: MarkdownProps) {\n  return (\n    <ReactMarkdown\n      source={props.source}\n      escapeHtml={false}\n      renderers={{ code: CodeBlock }}\n      disallowedTypes={[]}\n    />\n  );\n}\n","export default __webpack_public_path__ + \"static/media/profile.089b65e8.png\";","import React from \"react\";\n\nimport Heading from \"../heading/Heading\";\nimport Markdown from \"../markdown/Markdown\";\nimport ProfilePic from \"../../assets/profile.png\";\n\nimport \"./About.css\";\n\nconst aboutMarkdown = `\n## Hi üëã, I'm Aditya\nCurrently a senior year Computer Science undergraduate student at\n[NIT, Trichy](https://www.nitt.edu/).\n\nI like to work, travel, play games (both indoor & outdoor) and specially listen to music.\nI've developed a crazy interest for 'coding' in general. I enjoy competitive programming\nand developing software. I have been involved in software development for the past 3 years\nand currently working on improving my skills, finding new ways of thinking & problem solving\nto stay on top on new development.\n\n- üë®‚Äçüíª **Programming Languages**: Python ‚Ä¢ C++ ‚Ä¢ Java ‚Ä¢ Kotlin ‚Ä¢\nJavaScript ‚Ä¢ TypeScript ‚Ä¢ Go\n- üåê **Web Development**: HTML ‚Ä¢ CSS ‚Ä¢ React ‚Ä¢ Svelte ‚Ä¢\nNodeJS ‚Ä¢ Flask ‚Ä¢ Django\n- üì± **App Development**: Android Studio ‚Ä¢ Android Jetpack\n- ‚öôÔ∏è **Tools**: Linux ‚Ä¢ Git ‚Ä¢ TensorFlow ‚Ä¢ Docker ‚Ä¢ MySQL\n`;\n\nexport default function About() {\n  return (\n    <div className={\"about-container\"}>\n      <Heading heading={\"About Me\"} />\n      <div className={\"image-container\"}>\n        <img src={ProfilePic} alt={\"Profile Pic\"} />\n      </div>\n      <Markdown source={aboutMarkdown} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport interface Theme {\n  \"--color-accent\": string;\n  \"--color-primary\": string;\n  \"--color-primary-dark\": string;\n  \"--color-text\": string;\n}\n\nconst themes = [\n  {\n    // Dark Blue\n    \"--color-accent\": \"#1c2833\",\n    \"--color-primary\": \"#aed6f1\",\n    \"--color-primary-dark\": \"#3498db\",\n    \"--color-text\": \"#f5f5f5\"\n  },\n  {\n    // Dark Green\n    \"--color-accent\": \"#1d1f21\",\n    \"--color-primary\": \"#2bbc8a\",\n    \"--color-primary-dark\": \"#117A65\",\n    \"--color-text\": \"#f5f5f5\"\n  }\n  /* {\n    // Light Blue\n    \"--color-accent\": \"#fdfefe\",\n    \"--color-primary\": \"#3498db\",\n    \"--color-primary-dark\": \"#2E86C1\",\n    \"--color-text\": \"#1C2833\"\n  } */\n];\n\nexport const THEMES = {\n  DARK_BLUE: 0,\n  DARK_GREEN: 1\n  //   LIGHT_BLUE: 2\n};\n\nlet currentThemeIdx = THEMES.DARK_GREEN;\n\nexport function applyTheme(theme: number) {\n  currentThemeIdx = theme;\n  for (let [key, value] of Object.entries(themes[theme])) {\n    document.documentElement.style.setProperty(key, value);\n  }\n}\n\nexport function pickNextTheme() {\n  currentThemeIdx = (currentThemeIdx + 1) % themes.length;\n  applyTheme(currentThemeIdx);\n}\n\nexport const ThemeContext = React.createContext(themes[0]);\n","import React from \"react\";\nimport \"./Footer.css\";\nimport { pickNextTheme } from \"../../context/ThemeContext\";\n\nexport default function Footer() {\n  return (\n    <div className={\"footer-container\"}>\n      <div className={\"footer floating\"} onClick={pickNextTheme}>\n        By Aditya Kumar\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./Chip.css\";\n\ninterface ChipProps {\n  value: string;\n}\n\nexport default function Chip(props: ChipProps) {\n  return <div className={\"chip\"}>{props.value}</div>;\n}\n","import React from \"react\";\nimport Chip from \"../chip/Chip\";\nimport Markdown from \"../markdown/Markdown\";\nimport useMarkdownUrl from \"../../hooks/useMarkdown\";\n\nimport \"./Project.css\";\n\nexport interface ProjectProps {\n  title: string;\n  subtitle: string | undefined;\n  techStack: Array<string> | undefined;\n  duration: string | undefined;\n  details: string;\n  repositoryLink: string | undefined;\n  webLink: string | undefined;\n  playstoreLink: string | undefined;\n  readme: string | undefined;\n}\n\nexport default function Project(props: ProjectProps) {\n  const readme = useMarkdownUrl(props.readme);\n\n  return (\n    <div\n      className={\"project-container\"}\n      // onMouseEnter={() => setShowDetails(true)}\n      // onMouseLeave={() => setShowDetails(false)}\n      // onClick={() => setShowDetails(!showDetails)}\n    >\n      <div className={\"project-header\"}>\n        <div className={\"project-title\"}>{props.title}</div>\n        {props.repositoryLink && (\n          <a href={props.repositoryLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className={\"fab fa-github fa-lg\"}></i>\n          </a>\n        )}\n        {props.webLink && (\n          <a href={props.webLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className={\"fas fa-globe fa-lg\"}></i>\n          </a>\n        )}\n        {props.playstoreLink && (\n          <a href={props.playstoreLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className={\"fab fa-google-play fa-lg\"}></i>\n          </a>\n        )}\n      </div>\n      {props.subtitle && <div className={\"project-subtitle\"}>{props.subtitle}</div>}\n      {props.techStack && (\n        <div className={\"project-techstack\"}>\n          <span role=\"img\" aria-label={\"Bookmark\"}>\n            üîñ\n          </span>{\" \"}\n          {props.techStack.map((value) => {\n            return <Chip key={value} value={value} />;\n          })}\n        </div>\n      )}\n      {props.duration && (\n        <div className={\"project-duration\"}>\n          <span role=\"img\" aria-label={\"Calendar\"}>\n            üìÜ\n          </span>{\" \"}\n          {props.duration}\n        </div>\n      )}\n      <Markdown source={readme ? readme : props.details} />\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport default function useMarkdownUrl(url: string | undefined) {\n  const [markdown, setMarkdown] = useState(\"\");\n\n  useEffect(() => {\n    if (url) {\n      fetch(url)\n        .then((response) => response.text())\n        .then((md) => setMarkdown(md));\n    }\n  }, [url]);\n\n  return markdown;\n}\n","import React from \"react\";\n\nimport Heading from \"../heading/Heading\";\nimport Project, { ProjectProps } from \"./Project\";\n\ninterface ProjectListProps {\n  heading: string;\n  projects: Array<ProjectProps>;\n}\n\nexport default function ProjectList(props: ProjectListProps) {\n  return (\n    <div>\n      <Heading heading={props.heading} />\n      {props.projects.map((project) => {\n        return <Project key={project.title} {...project} />;\n      })}\n    </div>\n  );\n}\n","import { ProjectProps } from \"./Project\";\n\nexport const experience = [\n  {\n    title: \"Google Summer of Code 2020\",\n    subtitle: \"Student Developer | Scrapy | Python Software Foundation\",\n    techStack: [\"python\", \"Twisted\", \"hyper-h2\"],\n    duration: \"June 2020 - August 2020\",\n    details: `\n- [**https://medium.com/@adityaa30/http-2-client-for-scrapy-79ad5a1a8c7e**](https://medium.com/@adityaa30/http-2-client-for-scrapy-79ad5a1a8c7e)\n- Implemented HTTP/2 support to [**Scrapy**](https://github.com/scrapy/scrapy) adding an\n**H2DownloadHandler** that connects to **HTTP/2** via **ALPN or NPN** where possible, and\ntake advantage of the **compression and efficient gains**\n- **Built custom H2ClientProtocol** using [**Twisted**](https://twistedmatrix.com/trac/)\n**capable of multiplexing multiple requests in one connection**\n`\n  },\n  {\n    title: \"Amazon\",\n    subtitle: \"Software Developement Engineer Intern | Alexa Communications | Chennai\",\n    techStack: [\"python\", \"Java\", \"TensorFlow\", \"Dagger\", \"Stanford CoreNLP\"],\n    duration: \"May 2020 - June 2020\",\n    details: `\n- Designed an algorithm to **classify a string into a valid or invalid phone book name**\n- Integrated in **Amazon Spoken Name Entity Resolution Service** to **decrease overall latency** by ignoring\nthe lookup in ES Index when input is not a valid contact name\n- **Currently in testing phase**, with scope for expansion\n`\n  },\n  {\n    title: \"Indian Institute of Technology, Delhi\",\n    subtitle: \"Summer Research Intern | GIPEDI\",\n    techStack: [\"python\", \"Java\", \"Java Swing\", \"AndroidX\", \"TensorFlow\", \"Firebase ML Kit\", \"ReactJS\"],\n    duration: \"May 2019 - July 2019\",\n    details: `\n*Guide: [Prof. Tapan K Gandhi](https://tapankgandhi.com/), EE, Indian Institute of Technology, Delhi*\n\n1. Low Cost Vision Device and Mobile Application\n- Developed a **customized bounding box travel interface** in **Java‚Äôs Swing** based desktop application\nto navigate among all the predicted text blocks (bounding box) in an image\n- Developed an **android application** to **help people with Low Vision** in **classifying\nobjects and reading textual documents**\n- Created a simple **Speak List View** interface to show classification and OCR results with buttons\nprovided to select a list item and **convert into Speech output** using inbuilt Google Text To Speech\nmodel.\n2. Intelligent Tutoring System for Rehabilitation Device for Child with ASD\n- As part of a four-member team, trained a **RL agent** to **improve patient‚Äôs decision-making process**\n- Developed an **interactive maze game** in ReactJS with **varied difficulty levels decided by the agent**\n- Developed a Flask based API to **predict the next difficulty level based on the performance on current\nlevel**\n`\n  },\n  {\n    title: \"Technische Universit√§t Dresden\",\n    subtitle: \"Research Intern | Germany\",\n    techStack: [\"python\", \"JavaScript\", \"flask\", \"MySQL\"],\n    duration: \"Jan 2019 ‚Äì Jan 2020\",\n    details: `\n*Guide: Prof. Prabhas Kumar Yadav (TU Dresden, DE and MUJ, IN) and Prof R. Liedl (TU Dresden)*\n\n- Developed an **interactive and easy-to-use data management and computational online tool** for the\n**assessment and evaluation of surface water quality**\n- Developed a **data calibration interface** to calibrate parameters concentration to obtain optimum\nWQI\n- Wrote the Flask based API to calculate WQI based on complex methods such as CCME WQI, Tiwari and Mishra\nIndex, Prati‚Äôs Index and OIP and generate plots using Plotly\n- Designed efficient DB schema to store water-data having variable number of parameters to\ndecrease query time\n- Full Stack Web Development, JavaScript, Python, Git and debugged using Chrome Developer\nTools\n`\n  },\n  {\n    title: \"Probus Smart Things\",\n    subtitle: \"Winter Intern | Delhi\",\n    techStack: [\"Java\", \"AndroidX\", \"Android Jetpack\", \"RxJava\", \"BLE\"],\n    duration: \"December 2018\",\n    details: `\n- Worked on the android app for the project **Real-Time Water Quality Sensor**\n- Synchronized the app with the provided Water API to **display real time sensor**\ndata analysis in **tables and graphs**\n- Develop an **offline BLE scanner** feature to **fetch data from a nearby sensor in real time**\n- Revamp the existing database architecture using **Room Persistence Library** to save water data\ncollected from the sensor\n`\n  },\n  {\n    title: \"Delta Force\",\n    subtitle: \"Software Developer | NIT Trichy\",\n    duration: \"July 2018 - Present\",\n    details: `\n- The coding club of my college, which handles most of the **software development** for\nvarious web related activities of festivals such as [Festember](https://festember.com/),\n[Pragyan](https://www.pragyan.org/20/home/) and [NittFest](https://www.nittfest.in/)\n- Responsible for **developing & maintaining** the [institute‚Äôs official website](https://www.nitt.edu/)\n- Conducted an introductory **workshop on algorithms** for more than 100 freshers\n`,\n    repositoryLink: \"https://github.com/delta\",\n    webLink: \"https://delta.nitt.edu/\"\n  }\n] as Array<ProjectProps>;\n\nexport const projects = [\n  {\n    title: \"check-commit\",\n    subtitle: \"Github Action üöÄ\",\n    techStack: [\"TypeScript\", \"jest\", \"@actions/github\"],\n    details: `\n- Github Action to check if the commit message follows proper syntax\n- Added unit tests using **jest** with **94% line coverage** and **89% branch coverage**\n- Published the action on [Github Marketplace](https://github.com/marketplace/actions/check-commit-message)\n`,\n    repositoryLink: \"https://github.com/adityaa30/check-commit\",\n    webLink: \"https://github.com/marketplace/actions/check-commit-message\",\n    readme: \"https://raw.githubusercontent.com/adityaa30/check-commit/master/README.md\"\n  },\n  {\n    title: \"Nostalgia\",\n    subtitle: \"Delta Force | NIT Trichy\",\n    techStack: [\"JavaScript\", \"Svelte\", \"Node Express\", \"MySQL\", \"Docker\"],\n    duration: \"April 2020 - May 2020\",\n    details: `\n- Built **Svelte** and **NodeJS Express** application for end of the year event for 4th years\nin NIT Trichy\n- Wrote **responsive** UI components for **Login, Vote, Nominate and Result** views\n- Implemented **authentication middleware** using JWT and **secure http cookie** for\nroutes that require a logged-in user\n- **Dockerized** the entire application and configured **webpack** to build production\nready code\n`,\n    webLink: \"https://delta.nitt.edu/nostalgia/\"\n  },\n  {\n    title: \"Labyrinth\",\n    subtitle: \"Delta Force | NIT Trichy\",\n    techStack: [\"JavaScript\", \"ReactJS\", \"MongoDB\"],\n    duration: \"January 2019 - February 2020\",\n    details: `\n- Labyrinth is an online treasure hunt event that tests your technical and analytical skills\n- Revamp all the class based components to **functional components** using **React Hooks**\n- Design the Login, SignUp & Leaderboard components\n`,\n    webLink: \"https://labyrinth.pragyan.org/\"\n  },\n  {\n    title: \"Beer Factory\",\n    subtitle: \"Delta Force | Pragyan'19 | NIT Trichy\",\n    techStack: [\"python\", \"django\", \"TensorFlow\"],\n    duration: \"December 2019 - February 2020\",\n    details: `\n- An **online strategy-based**, single-player **resource management** game. Each player\ncompetes against **computer simulated opponent**\n- Implemented custom **FactoryEnvironment** to simulate gameplay\n- Implemented **Asynchronous Advantage Actor Critic** algorithm and trained the\nagent using **TensorFlow**\n- Designed database models, game and leaderboard logic views\n`,\n    webLink: \"https://www.pragyan.org/20/projects/\"\n  },\n  {\n    title: \"socket-ip\",\n    subtitle: \"Internetworking Protocols - Project | NIT Trichy\",\n    techStack: [\"python\", \"Go\"],\n    details: `\n- Implement **Broadcast**, **Multicast**, **Go Back N ARQ**, **Selective Repeat** for client server using\n**python sockets** library\n- Implement multicast with chatting interface for command-line using *net.Conn* in Go\n`,\n    repositoryLink: \"https://github.com/adityaa30/socket-ip\",\n    readme: \"https://raw.githubusercontent.com/adityaa30/socket-ip/master/readme.md\"\n  },\n  {\n    title: \"cuda-dapa\",\n    subtitle: \"Design & Analysis of Parallel Algorithms - Assignment | | NIT Trichy\",\n    techStack: [\"C++\", \"CUDA\"],\n    details: `\n- Implemented **Matrix Transpose** using **Shuffle and Mesh architectures**\n- Designed a parallel algorithm to compute all nCk combinations for first N natural numbers\n`,\n    repositoryLink: \"https://github.com/adityaa30/cuda-dapa\",\n    readme: \"https://raw.githubusercontent.com/adityaa30/cuda-dapa/master/readme.md\"\n  },\n  {\n    title: \"Pragyan App\",\n    subtitle: \"Delta Force | NIT Trichy\",\n    techStack: [\"Java\", \"AndroidX\", \"Android Jetpack\", \"RxJava\", \"Dagger2\", \"OpenGL\"],\n    duration: \"February 2019 - April 2019\",\n    details: `\n- Worked on the official app for the *Pragyan‚Äô19 (The International\nTechno-Managerial Fest of NIT Trichy)*\n- Created a customized implementation of a **general particle simulation using\nOpenGL in Java** exponentially improving performance\n- A frame rate of **30 fps** was achieved rendering **50,000 particles** on an old low spec\nandroid smartphone\n- Revamp the database of the app using **room persistence library**\n`,\n    playstoreLink: \"https://play.google.com/store/apps/details?id=com.pragyan19.app\"\n  },\n  {\n    title: \"Morpheus\",\n    subtitle: \"Pragyan Hackathon, Chennai\",\n    duration: [\"January 2019\"],\n    techStack: [\"python\", \"Java\", \"Dlib\", \"django\", \"AndroidX\"],\n    details: `\n- **Top 5 out of 100+ teams** in [Pragyan‚Äô19 Hackathon 2019](https://www.pragyan.org/hackathon/),\nevent at *Pragyan‚Äô19 (The International Techno-Management Festival of NIT-Trichy)*.\n- Provide **drivers** with an **easy, intuitive and effective means of assistance while driving**\nfor long hours, **sounds alarm** if deemed too tired to drive safely, **providing assistance\nby directing them** to the nearestrest-stop, hotel, parking-lot, etc\n- Implement **Multi-task Cascaded Neural Networks** to identify faces in a video stream\non a frame by frame basis and **Dlib** library to identify landmarks on face and extract\ncoordinates of eyes\n- Achieved a process time of **0.112 seconds/image**\n- Developed an android app to **sound alarms** if **drowsiness is detected** and display **graphs of\nrecent EAR activity** of the driver\n`,\n    repositoryLink: \"https://github.com/adityaa30/morpheus-backend\"\n  },\n  {\n    title: \"Quantum Eye\",\n    subtitle: \"VIT Hack\",\n    duration: [\"October 2018\"],\n    techStack: [\"python\", \"Java\", \"TensorFlow\", \"Transfer Learning\", \"Android\", \"FCM\"],\n    details: `\n- Used **Convolutional Neural Networks** and applied **Transfer Learning** from the\n[**InceptionV3**](https://cloud.google.com/tpu/docs/inception-v3-advanced) model\nto **flag baggage X-ray images for dangerous objects**\n- Achieved an overall testing accuracy of **99.12%**\n- Developed an android app to receive alerts of illegal object detection using **Firebase\nCloud Messaging**\n`,\n    repositoryLink: \"https://github.com/adityaa30/QuantumEye\"\n  }\n] as Array<ProjectProps>;\n","import React from \"react\";\nimport ResumeFile from \"../../assets/Resume.pdf\";\n\nconst EmbedStyle = {\n  position: \"absolute\",\n  height: \"100%\",\n  top: 0,\n  left: 0,\n  zIndex: 100\n} as React.CSSProperties;\n\nexport default function Resume() {\n  return <embed style={EmbedStyle} width=\"100%\" height=\"100%\" src={ResumeFile} type=\"application/pdf\" />;\n}\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"../header/Header\";\nimport About from \"../about/About\";\nimport Footer from \"../footer/Footer\";\nimport ProjectList from \"../project/ProjectList\";\nimport { experience as experiences, projects } from \"../project/ProjectDetails\";\nimport Resume from \"../resume/Resume\";\n\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <div className={\"app-container\"}>\n        <Header />\n        <Switch>\n          <Route\n            exact={true}\n            path={\"/projects\"}\n            render={() => <ProjectList heading={\"Projects\"} projects={projects} />}\n          />\n          <Route\n            exact={true}\n            path={\"/experience\"}\n            render={() => <ProjectList heading={\"Experience\"} projects={experiences} />}\n          />\n          <Route exact={true} path={\"/resume\"} component={Resume} />\n          <Route exact={true} path={\"/\"} component={About} />\n        </Switch>\n        <Footer />\n      </div>\n    </HashRouter>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { applyTheme, THEMES } from \"./context/ThemeContext\";\n\nconst theme = new Date().getHours() % Object.keys(THEMES).length;\napplyTheme(theme);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}